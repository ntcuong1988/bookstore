name: CI - Bookstore PHP 8 + MySQL + Tests

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build-test:
    runs-on: ubuntu-latest
    env:
      DB_HOST: 127.0.0.1
      DB_NAME: ${{ vars.DB_DATABASE || 'bookstore_ci' }}
      DB_USER: root
      DB_PASS: root
      APP_BASE_URL: http://127.0.0.1:8001                
    strategy:
      matrix:
        php: ["8.2"]
    services:
      mysql:
        image: mysql:8.0
        env:
          MYSQL_ROOT_PASSWORD: root
          MYSQL_DATABASE: ${{ vars.DB_DATABASE || 'bookstore_ci' }}
        ports: ["3306:3306"]
        options: >-
          --health-cmd="mysqladmin ping -h 127.0.0.1 -uroot -proot"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=10

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ matrix.php }}
          extensions: pdo_mysql, mysqli, mbstring, intl, curl
          ini-values: short_open_tag=1, error_reporting=E_ALL, display_errors=1, log_errors=1, error_log=server.log, session.save_path=/tmp
          coverage: none

      - name: Wait for MySQL
        run: |
          for i in `seq 1 30`; do
            mysqladmin ping -h 127.0.0.1 -uroot -proot && break
            sleep 2
          done

      - name: Ensure composer.json (init if missing)
        run: |
          if [ ! -f composer.json ]; then
            composer init -n --name="your/bookstore" --type="project"
          fi

      - name: Require dev test tools (PHPUnit + Codeception)
        run: |
          composer require --dev phpunit/phpunit:^10 codeception/codeception:^5 codeception/module-phpbrowser:^3

      - name: Create database & config
        run: |
          mysql -h 127.0.0.1 -uroot -proot -e "CREATE DATABASE IF NOT EXISTS ${{ vars.DB_DATABASE || 'bookstore_ci' }} CHARACTER SET utf8mb4 COLLATE utf8mb4_unicode_ci;"
          mkdir -p config
          cat > config/database.php <<'PHP'
          <?php
          return [
              'DB_HOST' => '127.0.0.1',
              'DB_PORT' => '3306',
              'DB_NAME' => getenv('DB_DATABASE') ?: (getenv('GITHUB_VARIABLES_DB_DATABASE') ?: 'bookstore_ci'),
              'DB_USER' => getenv('DB_USERNAME') ?: 'root',
              'DB_PASS' => getenv('DB_PASSWORD') ?: 'root',
              'DB_CHARSET' => 'utf8mb4',
          ];
          PHP

      - name: PHP lint
        run: |
          find . -type f -name "*.php" -print0 | xargs -0 -n1 -P4 php -l

      - name: Run DB migrations
        run: |
          if [ -f scripts/migrate.php ]; then
            php scripts/migrate.php up
          else
            echo "No migration runner found at scripts/migrate.php (skipping)"
          fi

      - name: Seed demo data
        run: |
          if [ -f scripts/migrate.php ]; then
            php scripts/migrate.php seed || true
          else
            echo "⚠️ No seed script found."
          fi

      - name: Start PHP built-in server for acceptance tests
        run: |
          DOCROOT="public"
          if [ ! -d "$DOCROOT" ]; then DOCROOT="."; fi
          php -d display_errors=1 -d error_log=server.log -S 127.0.0.1:8001 -t "$DOCROOT" > server.log 2>&1 &
          for i in {1..20}; do
            curl -sSf -I "http://127.0.0.1:8001/" && break
            sleep 1
          done
          curl -I http://127.0.0.1:8001/ || true

      - name: Check homepage output
        run: |
          echo "--- index.php response preview ---"
          curl -s http://127.0.0.1:8001/index.php | head -n 40 || true

      - name: PHPUnit - Unit tests
        if: hashFiles('phpunit.xml', 'phpunit.xml.dist') != ''
        run: |
          vendor/bin/phpunit --colors=always

      - name: Codeception - Acceptance tests
        if: hashFiles('codeception.yml') != ''
        run: |
          vendor/bin/codecept build
          vendor/bin/codecept run acceptance --steps --debug

      - name: Show DB versions table (if exists)
        run: |
          mysql -h 127.0.0.1 -uroot -proot -e "USE ${{ vars.DB_DATABASE || 'bookstore_ci' }}; SHOW TABLES LIKE '__db_version';" | grep __db_version &&           mysql -h 127.0.0.1 -uroot -proot -e "SELECT version, description, applied_at FROM ${{ vars.DB_DATABASE || 'bookstore_ci' }}.__db_version ORDER BY id;" || true

      - name: Upload logs (on failure)
        if: always() && matrix.php == '8.2'
        uses: actions/upload-artifact@v4
        with:
          name: ci-logs
          path: |
            server.log
            tests/**/_output/*